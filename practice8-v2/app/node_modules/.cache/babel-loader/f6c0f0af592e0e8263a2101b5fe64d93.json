{"ast":null,"code":"var _jsxFileName = \"/app/section3-react_basics/first-app/src/components/expenses/ExpensesList.js\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesList = _ref => {\n  let {\n    expenses,\n    selected\n  } = _ref;\n  const filteredExpenese = expenses.filter(expense => expense.date.getFullYear().toString() === selectedYear);\n  let content = expenses.filter(expense => expense.date.getFullYear().toString() === selectedYear); // if there is no filtered expenses diplay p else display expenses content\n\n  if (content.length === 0) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No items found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 15\n    }, this);\n  } else {\n    content = filteredExpenese.map(item => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: item.title,\n      amount: item.amount,\n      date: item.date\n    }, item.title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this));\n  }\n};\n\n_c = ExpensesList;\nexport default ExpensesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"names":["ExpenseItem","ExpensesList","expenses","selected","filteredExpenese","filter","expense","date","getFullYear","toString","selectedYear","content","length","map","item","title","amount"],"sources":["/app/section3-react_basics/first-app/src/components/expenses/ExpensesList.js"],"sourcesContent":["import ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList = ({expenses, selected}) => {\n  const filteredExpenese = expenses.filter(\n    (expense) => expense.date.getFullYear().toString() === selectedYear\n  );\n\n  let content = expenses.filter(\n    (expense) => expense.date.getFullYear().toString() === selectedYear\n  );\n\n  // if there is no filtered expenses diplay p else display expenses content\n  \n  if (content.length === 0) {\n    content = <p>No items found</p>;\n  } else {\n    content = filteredExpenese.map((item) => (\n      <ExpenseItem\n        key={item.title}\n        title={item.title}\n        amount={item.amount}\n        date={item.date}\n      />\n    ));\n  }\n};\n\nexport default ExpensesList;\n"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,YAAY,GAAG,QAA0B;EAAA,IAAzB;IAACC,QAAD;IAAWC;EAAX,CAAyB;EAC7C,MAAMC,gBAAgB,GAAGF,QAAQ,CAACG,MAAT,CACtBC,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CC,YADhC,CAAzB;EAIA,IAAIC,OAAO,GAAGT,QAAQ,CAACG,MAAT,CACXC,OAAD,IAAaA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CC,YAD3C,CAAd,CAL6C,CAS7C;;EAEA,IAAIC,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B;IACxBD,OAAO,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAV;EACD,CAFD,MAEO;IACLA,OAAO,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBC,IAAD,iBAC7B,QAAC,WAAD;MAEE,KAAK,EAAEA,IAAI,CAACC,KAFd;MAGE,MAAM,EAAED,IAAI,CAACE,MAHf;MAIE,IAAI,EAAEF,IAAI,CAACP;IAJb,GACOO,IAAI,CAACC,KADZ;MAAA;MAAA;MAAA;IAAA,QADQ,CAAV;EAQD;AACF,CAvBD;;KAAMd,Y;AAyBN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}